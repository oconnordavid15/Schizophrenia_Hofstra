**************************************************************************************************************
**************************************************************************************************************
**************************************************************************************************************
	The Box Task as described in Moritz, S., Göritz, A. S., Balzan, R. P., Gawęda, Ł., Kulagin, S. C., & Andreou, C. (2017). 
	A new paradigm to measure probabilistic reasoning and a possible answer to the question why psychosis-prone individuals jump to conclusions. 
	Journal of Abnormal Psychology, 126(4), 406.
	http://dx.doi.org/10.1037/abn0000262

**************************************************************************************************************
**************************************************************************************************************
	Main Inquisit programming: Jakob Scheunemann (j.scheunemann@uke.de)

**************************************************************************************************************
**************************************************************************************************************
	Last Modified: 2021-02-11, Jakob Scheunemann
	Last updated:  2021-02-11, Jakob Scheunemann
	Minor changes: 2021-02-26, Karsten Grzella

**************************************************************************************************************
**************************************************************************************************************
	Background info about the task: ...

**************************************************************************************************************
**************************************************************************************************************
**************************************************************************************************************
**************************************************************************************************************
	About this script: 
	This script displays the box task with 12 boxes, with up to 20 trials. 
	After a box opens, the participant can decide whether to open more boxes or to continue with a decision.
	If the participant decides to have enough information, they can answer the likelihood for the color, decide for a color and rate confidence.
 
	Changeable parameters:
	The sequences and lengths of each trial can be determined easily.
	The instructions can be changed/translated easily.
	The likert scale for likelihood rating and confidence rating can be changed.
	The number of trials can be determined (see element "expt")
	To decide, whether the sequences should be presented in random order or in sequence, see list element trial_sequence and change settings there.
	
**************************************************************************************************************
**************************************************************************************************************
**************************************************************************************************************
**************************************************************************************************************

											START OF SKRIPT

**************************************************************************************************************
**************************************************************************************************************
	Setting the sequences: For each trial, the sequence needs to be defined in the element color_sequence_trialXX
	The sequence can be up to 12 items long. If the number of items is less than 12, the box task become the pressure
	version automatically. That means, if the participant wants to open more boxes than items in the list, the trial ends.

	The sequence of colors is being defined, independently from where the participant clicks.

	Additionally, the unique two colors in each trial need to be defined in colors_unique_trialXX.

	Additionally, the colors need to be defined in text format in colors_text_trialXX. If the experiment should be run in another
	language than English, insert color names in the corresponding language.

	If one prefers less than 20 trials, parameters in element expt need to be changes below. Either delete all unused list elements or 
	fill them with any colors.

	For different colors see: https://www.millisecond.com/support/docs/v6/html/language/colors.htm

**************************************************************************************************************
**************************************************************************************************************

*This list defines the sequence in trial 01. For example, if sequence reads: "/items = (yellow, blue, yellow, yellow, blue)", the participant sees
*the color yellow for the first box they open (no matter which of the 12). The second box will be blue. This trial will end, when the participant
*requests to see a sixth box, as the number of elements in this list is 5. In this case, the participant is referred to the next trial. 
*Please note: If one prefers to have a no-pressure condition, simply make sure to have 12 items in each list and to change the instructions accordingly. 
<list color_sequence_trial01> 
/ items = (orange, purple, purple, orange, orange, purple, orange, orange)
/ selectionmode = values.current_click 
</list>

*This list displays the unique colors in this trial. For example, if the sequence defined above reads "/items = (yellow, blue, yellow, yellow, blue)", the 
*items should be "/ items = (yellow, blue)". In this case, yellow will be on the left and blue on the right, when the participant decides for any of the two colors
<list colors_unique_trial01> 
/ items = (orange, purple)
/ selectionrate = block
</list>

*This list contains the colors in each trial in text format. This should be translated in the corresponding language.
<list colors_text_trial01> 
/ items = ("orange", "purple")
/ selectionrate = block
</list>

<list color_sequence_trial02>
/ items = (gray, fuchsia, gray, fuchsia,gray, fuchsia,gray, fuchsia,gray)
/ selectionmode = values.current_click
</list>

<list colors_unique_trial02> 
/ items = (gray, fuchsia)
/ selectionrate = block
</list>

<list colors_text_trial02> 
/ items = ("gray", "purple")
/ selectionrate = block
</list>


<list color_sequence_trial03>
/ items = (orangered, orangered, deepskyblue, deepskyblue, orangered, deepskyblue, orangered, orangered)
/ selectionmode = values.current_click
</list>

<list colors_unique_trial03> 
/ items = (orangered, deepskyblue)
/ selectionrate = block
</list>

<list colors_text_trial03> 
/ items = ("red", "blue")
/ selectionrate = block
</list>

<list color_sequence_trial04> 
/ items = (purple, grey, purple, grey, purple, grey, purple)
/ selectionmode = values.current_click 
</list>

<list colors_unique_trial04> 
/ items = (purple, grey)
/ selectionrate = block
</list>

<list colors_text_trial04> 
/ items = ("purple", "grey")
/ selectionrate = block
</list>


<list color_sequence_trial05>
/ items = (green, red, red)
/ selectionmode = values.current_click
</list>

<list colors_unique_trial05> 
/ items = (green, red)
/ selectionrate = block
</list>

<list colors_text_trial05> 
/ items = ("green", "red")
/ selectionrate = block
</list>


<list color_sequence_trial06>
/ items = (orange, orange, pink)
/ selectionmode = values.current_click
</list>

<list colors_unique_trial06> 
/ items = (orange, pink)
/ selectionrate = block
</list>

<list colors_text_trial06> 
/ items = ("orange", "pink")
/ selectionrate = block
</list>


<list color_sequence_trial07> 
/ items = (yellow, blue, yellow, yellow, blue)
/ selectionmode = values.current_click 
</list>

<list colors_unique_trial07> 
/ items = (yellow, blue)
/ selectionrate = block
</list>

<list colors_text_trial07> 
/ items = ("yellow", "blue")
/ selectionrate = block
</list>


<list color_sequence_trial08>
/ items = (green, red, red)
/ selectionmode = values.current_click
</list>

<list colors_unique_trial08> 
/ items = (green, red)
/ selectionrate = block
</list>

<list colors_text_trial08> 
/ items = ("green", "red")
/ selectionrate = block
</list>


<list color_sequence_trial09>
/ items = (orange, orange, pink)
/ selectionmode = values.current_click
</list>

<list colors_unique_trial09> 
/ items = (orange, pink)
/ selectionrate = block
</list>

<list colors_text_trial09> 
/ items = ("orange", "pink")
/ selectionrate = block
</list>


<list color_sequence_trial10>
/ items = (orange, orange, pink)
/ selectionmode = values.current_click
</list>

<list colors_unique_trial10> 
/ items = (orange, pink)
/ selectionrate = block
</list>

<list colors_text_trial10> 
/ items = ("orange", "pink")
/ selectionrate = block
</list>


<list color_sequence_trial11> 
/ items = (yellow, blue, yellow, yellow, blue)
/ selectionmode = values.current_click 
</list>

<list colors_unique_trial11> 
/ items = (yellow, blue)
/ selectionrate = block
</list>

<list colors_text_trial11> 
/ items = ("yellow", "blue")
/ selectionrate = block
</list>



<list color_sequence_trial12>
/ items = (green, red, red)
/ selectionmode = values.current_click
</list>

<list colors_unique_trial12> 
/ items = (green, red)
/ selectionrate = block
</list>

<list colors_text_trial12> 
/ items = ("green", "red")
/ selectionrate = block
</list>


<list color_sequence_trial13>
/ items = (orange, orange, pink)
/ selectionmode = values.current_click
</list>

<list colors_unique_trial13> 
/ items = (orange, pink)
/ selectionrate = block
</list>

<list colors_text_trial13> 
/ items = ("orange", "pink")
/ selectionrate = block
</list>


<list color_sequence_trial14> 
/ items = (yellow, blue, yellow, yellow, blue)
/ selectionmode = values.current_click 
</list>

<list colors_unique_trial14> 
/ items = (yellow, blue)
/ selectionrate = block
</list>

<list colors_text_trial14> 
/ items = ("yellow", "blue")
/ selectionrate = block
</list>



<list color_sequence_trial15>
/ items = (green, red, red)
/ selectionmode = values.current_click
</list>

<list colors_unique_trial15> 
/ items = (green, red)
/ selectionrate = block
</list>

<list colors_text_trial15> 
/ items = ("green", "red")
/ selectionrate = block
</list>


<list color_sequence_trial16>
/ items = (orange, orange, pink)
/ selectionmode = values.current_click
</list>

<list colors_unique_trial16> 
/ items = (orange, pink)
/ selectionrate = block
</list>

<list colors_text_trial16> 
/ items = ("orange", "pink")
/ selectionrate = block
</list>


<list color_sequence_trial17> 
/ items = (yellow, blue, yellow, yellow, blue)
/ selectionmode = values.current_click 
</list>

<list colors_unique_trial17> 
/ items = (yellow, blue)
/ selectionrate = block
</list>

<list colors_text_trial17> 
/ items = ("yellow", "blue")
/ selectionrate = block
</list>


<list color_sequence_trial18>
/ items = (green, red, red)
/ selectionmode = values.current_click
</list>

<list colors_unique_trial18> 
/ items = (green, red)
/ selectionrate = block
</list>

<list colors_text_trial18> 
/ items = ("green", "red")
/ selectionrate = block
</list>


<list color_sequence_trial19>
/ items = (orange, orange, pink)
/ selectionmode = values.current_click
</list>

<list colors_unique_trial19> 
/ items = (orange, pink)
/ selectionrate = block
</list>

<list colors_text_trial19> 
/ items = ("orange", "pink")
/ selectionrate = block
</list>


<list color_sequence_trial20>
/ items = (orange, orange, pink)
/ selectionmode = values.current_click
</list>

<list colors_unique_trial20> 
/ items = (orange, pink)
/ selectionrate = block
</list>

<list colors_text_trial20> 
/ items = ("orange", "pink")
/ selectionrate = block
</list>

**************************************************************************************************************
**************************************************************************************************************
**************************************************************************************************************
**********************     INSTRUCTIONS    *******************************************************************
**************************************************************************************************************
**************************************************************************************************************
**************************************************************************************************************

***Introduction (Page at beginning of experiment)
<instruct>
/windowsize = (50%,66%)
</instruct>



*** Instructions ***
<page instructions_pressure12_long>
^^Thank you. For the following trials, the task will stay the same, except that now, there are 50 insteadof 12 boxes. Again, it is your task to determine, which color is more frequent. Again, each trial may terminate at any point.
^^There will be no practice trial.
</page>

<page Reminder_Pressure>
^^Keep in mind: The task might stop before every box is opened. 
</page>

<text instruction>
/items = ("Please estimate which color will be displayed more frequently by the end (<%list.list_colornames_left.item(values.current_list)%> or <%list.list_colornames_right.item(values.current_list)%>):")
/ position = (50%, 2%)
/ fontstyle = ("Calibri", 2.6%)
/ erase = false
</text>

<text probability>
/items = ("Please indicate the probability that your chosen color will be displayed more frequently by the end: (You decided for color ")
/ position = (50%, 93.5%)
/ fontstyle = ("Calibri", 2.6%)
</text>

<text decision_color>
/items = ("Which color do you decide on?")
/ position = (50%, 20%)
/ fontstyle = ("Calibri", 2.6%)
/ erase = false
</text>

<text want_decision>
/items= ("I am ready to decide: This color will be displayed more frequently in the end:")
/ position = (25%, 96.5%)
/ fontstyle = ("Calibri", 2.6%)
/ erase = false
</text>

<text confidence>
/items = ("How confident are you with your decision? (You decided for color ")
/ position = (50%, 93.5%)
/ fontstyle = ("Calibri", 2.6%)
</text>

<text start>
/items = ("Trial <%expt.experiment.currentblocknumber%> of 3")
/ position = (50%, 20%)
/ fontstyle = ("Calibri", 5%)
/ erase = false
</text>

<text reminder_pressure>
/items = ("Keep in mind: Each trial may terminate at any point")
/ position = (50%, 30%)
/ fontstyle = ("Calibri", 3.5%)
/ erase = false
</text>

<text too_late>
/items = ("This trial is over, you decided too late.")
/ position = (50%, 20%)
/ fontstyle = ("Calibri", 2.6%)
/ erase = false
</text>

<text next_button>
/items= ("  Click Here >> ")
/ position = (50%, 90%)
/ fontstyle = ("Calibri", 2.6%)
/ hjustify = center
/ vjustify = center
/ txbgcolor = silver
/ erase = true(white)
</text>

<text OR>
/items=("OR")
/ position = (65%, 96.5%)
/ fontstyle = ("Calibri", 2.6%)
/ hjustify = center
/ vjustify = center
/ erase = false
</text>

****
<text text_decidedcolor_probability01>
/items = ("<% values.colordecision_trial01 %>)")
/ position = (86.1%, 93.5%)
/ halign = left
/ fontstyle = ("Calibri", 2.6%)
</text>

<text text_decidedcolor_probability02>
/items = ("<% values.colordecision_trial02 %>)")
/ position = (86.1%, 93.5%)
/ halign = left
/ fontstyle = ("Calibri", 2.6%)
</text>

<text text_decidedcolor_probability03>
/items = ("<% values.colordecision_trial03 %>)")
/ position = (86.1%, 93.5%)
/ halign = left
/ fontstyle = ("Calibri", 2.6%)
</text>

<text text_decidedcolor_probability04>
/items = ("<% values.colordecision_trial04 %>)")
/ position = (86.1%, 93.5%)
/ halign = left
/ fontstyle = ("Calibri", 2.6%)
</text>

<text text_decidedcolor_probability05>
/items = ("<% values.colordecision_trial05 %>)")
/ position = (86.1%, 93.5%)
/ halign = left
/ fontstyle = ("Calibri", 2.6%)
</text>

<text text_decidedcolor_probability06>
/items = ("<% values.colordecision_trial06 %>)")
/ position = (86.1%, 93.5%)
/ halign = left
/ fontstyle = ("Calibri", 2.6%)
</text>

<text text_decidedcolor_probability07>
/items = ("<% values.colordecision_trial07 %>)")
/ position = (86.1%, 93.5%)
/ halign = left
/ fontstyle = ("Calibri", 2.6%)
</text>

<text text_decidedcolor_probability08>
/items = ("<% values.colordecision_trial08 %>)")
/ position = (86.1%, 93.5%)
/ halign = left
/ fontstyle = ("Calibri", 2.6%)
</text>

<text text_decidedcolor_probability09>
/items = ("<% values.colordecision_trial09 %>)")
/ position = (86.1%, 93.5%)
/ halign = left
/ fontstyle = ("Calibri", 2.6%)
</text>

<text text_decidedcolor_probability10>
/items = ("<% values.colordecision_trial10 %>)")
/ position = (86.1%, 93.5%)
/ halign = left
/ fontstyle = ("Calibri", 2.6%)
</text>

<text text_decidedcolor_probability11>
/items = ("<% values.colordecision_trial11 %>)")
/ position = (86.1%, 93.5%)
/ halign = left
/ fontstyle = ("Calibri", 2.6%)
</text>

<text text_decidedcolor_probability12>
/items = ("<% values.colordecision_trial12 %>)")
/ position = (86.1%, 93.5%)
/ halign = left
/ fontstyle = ("Calibri", 2.6%)
</text>

<text text_decidedcolor_probability13>
/items = ("<% values.colordecision_trial13 %>)")
/ position = (86.1%, 93.5%)
/ halign = left
/ fontstyle = ("Calibri", 2.6%)
</text>

<text text_decidedcolor_probability14>
/items = ("<% values.colordecision_trial14 %>)")
/ position = (86.1%, 93.5%)
/ halign = left
/ fontstyle = ("Calibri", 2.6%)
</text>

<text text_decidedcolor_probability15>
/items = ("<% values.colordecision_trial15 %>)")
/ position = (86.1%, 93.5%)
/ halign = left
/ fontstyle = ("Calibri", 2.6%)
</text>

<text text_decidedcolor_probability16>
/items = ("<% values.colordecision_trial16 %>)")
/ position = (86.1%, 93.5%)
/ halign = left
/ fontstyle = ("Calibri", 2.6%)
</text>

<text text_decidedcolor_probability17>
/items = ("<% values.colordecision_trial17 %>)")
/ position = (86.1%, 93.5%)
/ halign = left
/ fontstyle = ("Calibri", 2.6%)
</text>

<text text_decidedcolor_probability18>
/items = ("<% values.colordecision_trial18 %>)")
/ position = (86.1%, 93.5%)
/ halign = left
/ fontstyle = ("Calibri", 2.6%)
</text>

<text text_decidedcolor_probability19>
/items = ("<% values.colordecision_trial19 %>)")
/ position = (86.1%, 93.5%)
/ halign = left
/ fontstyle = ("Calibri", 2.6%)
</text>

<text text_decidedcolor_probability20>
/items = ("<% values.colordecision_trial20 %>)")
/ position = (86.1%, 93.5%)
/ halign = left
/ fontstyle = ("Calibri", 2.6%)
</text>

***
<text text_decidedcolor_confidence01>
/items = ("<% values.colordecision_trial01 %>)")
/ position = (69.5%, 93.5%)
/ halign = left
/ fontstyle = ("Calibri", 2.6%)
</text>

<text text_decidedcolor_confidence02>
/items = ("<% values.colordecision_trial02 %>)")
/ position = (69.5%, 93.5%)
/ halign = left
/ fontstyle = ("Calibri", 2.6%)
</text>

<text text_decidedcolor_confidence03>
/items = ("<% values.colordecision_trial03 %>)")
/ position = (69.5%, 93.5%)
/ halign = left
/ fontstyle = ("Calibri", 2.6%)
</text>

<text text_decidedcolor_confidence04>
/items = ("<% values.colordecision_trial04 %>)")
/ position = (69.5%, 93.5%)
/ halign = left
/ fontstyle = ("Calibri", 2.6%)
</text>

<text text_decidedcolor_confidence05>
/items = ("<% values.colordecision_trial05 %>)")
/ position = (69.5%, 93.5%)
/ halign = left
/ fontstyle = ("Calibri", 2.6%)
</text>

<text text_decidedcolor_confidence06>
/items = ("<% values.colordecision_trial06 %>)")
/ position = (69.5%, 93.5%)
/ halign = left
/ fontstyle = ("Calibri", 2.6%)
</text>

<text text_decidedcolor_confidence07>
/items = ("<% values.colordecision_trial07 %>)")
/ position = (69.5%, 93.5%)
/ halign = left
/ fontstyle = ("Calibri", 2.6%)
</text>

<text text_decidedcolor_confidence08>
/items = ("<% values.colordecision_trial08 %>)")
/ position = (69.5%, 93.5%)
/ halign = left
/ fontstyle = ("Calibri", 2.6%)
</text>


<text text_decidedcolor_confidence09>
/items = ("<% values.colordecision_trial09 %>)")
/ position = (69.5%, 93.5%)
/ halign = left
/ fontstyle = ("Calibri", 2.6%)
</text>

<text text_decidedcolor_confidence10>
/items = ("<% values.colordecision_trial10 %>)")
/ position = (69.5%, 93.5%)
/ halign = left
/ fontstyle = ("Calibri", 2.6%)
</text>

<text text_decidedcolor_confidence11>
/items = ("<% values.colordecision_trial11 %>)")
/ position = (69.5%, 93.5%)
/ halign = left
/ fontstyle = ("Calibri", 2.6%)
</text>

<text text_decidedcolor_confidence12>
/items = ("<% values.colordecision_trial12 %>)")
/ position = (69.5%, 93.5%)
/ halign = left
/ fontstyle = ("Calibri", 2.6%)
</text>


<text text_decidedcolor_confidence13>
/items = ("<% values.colordecision_trial13 %>)")
/ position = (69.5%, 93.5%)
/ halign = left
/ fontstyle = ("Calibri", 2.6%)
</text>

<text text_decidedcolor_confidence14>
/items = ("<% values.colordecision_trial14 %>)")
/ position = (69.5%, 93.5%)
/ halign = left
/ fontstyle = ("Calibri", 2.6%)
</text>

<text text_decidedcolor_confidence15>
/items = ("<% values.colordecision_trial15 %>)")
/ position = (69.5%, 93.5%)
/ halign = left
/ fontstyle = ("Calibri", 2.6%)
</text>

<text text_decidedcolor_confidence16>
/items = ("<% values.colordecision_trial16 %>)")
/ position = (69.5%, 93.5%)
/ halign = left
/ fontstyle = ("Calibri", 2.6%)
</text>


<text text_decidedcolor_confidence17>
/items = ("<% values.colordecision_trial17 %>)")
/ position = (69.5%, 93.5%)
/ halign = left
/ fontstyle = ("Calibri", 2.6%)
</text>

<text text_decidedcolor_confidence18>
/items = ("<% values.colordecision_trial18 %>)")
/ position = (69.5%, 93.5%)
/ halign = left
/ fontstyle = ("Calibri", 2.6%)
</text>

<text text_decidedcolor_confidence19>
/items = ("<% values.colordecision_trial19 %>)")
/ position = (69.5%, 93.5%)
/ halign = left
/ fontstyle = ("Calibri", 2.6%)
</text>

<text text_decidedcolor_confidence20>
/items = ("<% values.colordecision_trial20 %>)")
/ position = (69.5%, 93.5%)
/ halign = left
/ fontstyle = ("Calibri", 2.6%)
</text>



**************************************************************************************************************
**************************************************************************************************************
**************************************************************************************************************
**********************     LIKERT SCALES    ******************************************************************
**************************************************************************************************************
**************************************************************************************************************
**************************************************************************************************************

***Likert scales need to be defined per trial. If all 20 trials are used, changes to the scales need to be done for all trials.
*** likert probability scale for trial 01
<likert likert_probability01>
/ anchors = [1= "100% sure yellow"; 2= "90% sure yellow"; 3= "80% sure yellow"; 4= "70% sure yellow"; 5="60% sure yellow"; 6="undecided"; 7= "60% sure blue"; 8="70% sure blue", 9="80% sure blue"; 10= "90% sure blue"; 11 = "100% sure blue"]
/ stimulusframes = [1 = responseoption_trialdecide_erase1, responseoption_trialdecide_erase2, probability, text_decidedcolor_probability01]
/ beginresponseframe = 2
/ fontstyle = ("Calibri", 1.7%)
/ numpoints = 11
/ inputdevice = mouse 
/ position = (50, 99)
/ branch = [likert.confidence01]
</likert>

*** likert confidence scale for trial 01
<likert confidence01>
/ anchors = [1= "highly confident"; 2= "quite confident"; 3= "not very confident"; 4= "guessed"]
/ stimulusframes = [1 = confidence, text_decidedcolor_confidence01]
/ fontstyle = ("Calibri", 1.7%)
/ inputdevice = mouse 
/ numpoints = 4
/ position = (50,99)
/ ontrialend = [values.endblock = 1]
</likert>


<likert likert_probability02>
/ anchors = [1= "100% sure green"; 2= "90% sure green"; 3= "80% sure green"; 4= "70% sure green"; 5="60% sure green"; 6="undecided"; 7= "60% sure red"; 8="70% sure red", 9="80% sure red"; 10= "90% sure red"; 11 = "100% sure red"]
/ stimulusframes = [1 = responseoption_trialdecide_erase1, responseoption_trialdecide_erase2, probability, text_decidedcolor_probability02]
/ beginresponseframe = 2
/ fontstyle = ("Calibri", 1.7%)
/ numpoints = 11
/ inputdevice = mouse 
/ position = (50,99)
/ branch = [likert.confidence02]
</likert>

<likert confidence02>
/ anchors = [1= "highly confident"; 2= "quite confident"; 3= "not very confident"; 4= "guessed"]
/ stimulusframes = [1 = confidence, text_decidedcolor_confidence02]
/ fontstyle = ("Calibri", 1.7%)
/ inputdevice = mouse 
/ numpoints = 4
/ position = (50,99)
/ ontrialend = [values.endblock = 1]
</likert>

<likert likert_probability03>
/ anchors = [1= "100% sure orange"; 2= "90% sure orange"; 3= "80% sure orange"; 4= "70% sure orange"; 5="60% sure orange"; 6="undecided"; 7= "60% sure pink"; 8="70% sure pink", 9="80% sure pink"; 10= "90% sure pink"; 11 = "100% sure pink"]
/ stimulusframes = [1 = responseoption_trialdecide_erase1, responseoption_trialdecide_erase2, probability, text_decidedcolor_probability03]
/ beginresponseframe = 2
/ fontstyle = ("Calibri", 1.7%)
/ numpoints = 11
/ inputdevice = mouse 
/ position = (50,99)
/ branch = [likert.confidence03]
</likert>

<likert confidence03>
/ anchors = [1= "highly confident"; 2= "quite confident"; 3= "not very confident"; 4= "guessed"]
/ stimulusframes = [1 = confidence, text_decidedcolor_confidence03]
/ fontstyle = ("Calibri", 1.7%)
/ inputdevice = mouse 
/ numpoints = 4
/ position = (50,99)
/ ontrialend = [values.endblock = 1]
</likert>

<likert likert_probability04>
/ anchors = [1= "100% sure purple"; 2= "90% sure purple"; 3= "80% sure purple"; 4= "70% sure purple"; 5="60% sure purple"; 6="undecided"; 7= "60% sure grey"; 8="70% sure grey", 9="80% sure grey"; 10= "90% sure grey"; 11 = "100% sure grey"]
/ stimulusframes = [1 = responseoption_trialdecide_erase1, responseoption_trialdecide_erase2, probability, text_decidedcolor_probability04]
/ beginresponseframe = 2
/ fontstyle = ("Calibri", 1.7%)
/ numpoints = 11
/ inputdevice = mouse 
/ position = (50,99)
/ branch = [likert.confidence04]
</likert>


<likert confidence04>
/ anchors = [1= "highly confident"; 2= "quite confident"; 3= "not very confident"; 4= "guessed"]
/ stimulusframes = [1 = confidence, text_decidedcolor_confidence04]
/ fontstyle = ("Calibri", 1.7%)
/ inputdevice = mouse 
/ numpoints = 4
/ position = (50,99)
/ ontrialend = [values.endblock = 1]
</likert>

<likert likert_probability05>
/ anchors = [1= "100% sure green"; 2= "90% sure green"; 3= "80% sure green"; 4= "70% sure green"; 5="60% sure green"; 6="undecided"; 7= "60% sure red"; 8="70% sure red", 9="80% sure red"; 10= "90% sure red"; 11 = "100% sure red"]
/ stimulusframes = [1 = responseoption_trialdecide_erase1, responseoption_trialdecide_erase2, probability, text_decidedcolor_probability05]
/ beginresponseframe = 2
/ fontstyle = ("Calibri", 1.7%)
/ numpoints = 11
/ inputdevice = mouse 
/ position = (50,99)
/ branch = [likert.confidence05]
</likert>

<likert confidence05>
/ anchors = [1= "highly confident"; 2= "quite confident"; 3= "not very confident"; 4= "guessed"]
/ stimulusframes = [1 = confidence, text_decidedcolor_confidence05]
/ fontstyle = ("Calibri", 1.7%)
/ inputdevice = mouse 
/ numpoints = 4
/ position = (50,99)
/ ontrialend = [values.endblock = 1]
</likert>

<likert likert_probability06>
/ anchors = [1= "100% sure orange"; 2= "90% sure orange"; 3= "80% sure orange"; 4= "70% sure orange"; 5="60% sure orange"; 6="undecided"; 7= "60% sure pink"; 8="70% sure pink", 9="80% sure pink"; 10= "90% sure pink"; 11 = "100% sure pink"]
/ stimulusframes = [1 = responseoption_trialdecide_erase1, responseoption_trialdecide_erase2, probability, text_decidedcolor_probability06]
/ beginresponseframe = 2
/ fontstyle = ("Calibri", 1.7%)
/ numpoints = 11
/ inputdevice = mouse 
/ position = (50,99)
/ branch = [likert.confidence06]
</likert>

<likert confidence06>
/ anchors = [1= "highly confident"; 2= "quite confident"; 3= "not very confident"; 4= "guessed"]
/ stimulusframes = [1 = confidence, text_decidedcolor_confidence06]
/ fontstyle = ("Calibri", 1.7%)
/ inputdevice = mouse 
/ numpoints = 4
/ position = (50,99)
/ ontrialend = [values.endblock = 1]
</likert>

<likert likert_probability07>
/ anchors = [1= "100% sure yellow"; 2= "90% sure yellow"; 3= "80% sure yellow"; 4= "70% sure yellow"; 5="60% sure yellow"; 6="undecided"; 7= "60% sure blue"; 8="70% sure blue", 9="80% sure blue"; 10= "90% sure blue"; 11 = "100% sure blue"]
/ stimulusframes = [1 = responseoption_trialdecide_erase1, responseoption_trialdecide_erase2, probability, text_decidedcolor_probability07]
/ beginresponseframe = 2
/ fontstyle = ("Calibri", 1.7%)
/ numpoints = 11
/ inputdevice = mouse 
/ position = (50,99)
/ branch = [likert.confidence07]
</likert>

<likert confidence07>
/ anchors = [1= "highly confident"; 2= "quite confident"; 3= "not very confident"; 4= "guessed"]
/ stimulusframes = [1 = confidence, text_decidedcolor_confidence07]
/ fontstyle = ("Calibri", 1.7%)
/ inputdevice = mouse 
/ numpoints = 4
/ position = (50,99)
/ ontrialend = [values.endblock = 1]
</likert>

<likert likert_probability08>
/ anchors = [1= "100% sure green"; 2= "90% sure green"; 3= "80% sure green"; 4= "70% sure green"; 5="60% sure green"; 6="undecided"; 7= "60% sure red"; 8="70% sure red", 9="80% sure red"; 10= "90% sure red"; 11 = "100% sure red"]
/ stimulusframes = [1 = responseoption_trialdecide_erase1, responseoption_trialdecide_erase2, probability, text_decidedcolor_probability08]
/ beginresponseframe = 2
/ fontstyle = ("Calibri", 1.7%)
/ numpoints = 11
/ inputdevice = mouse 
/ position = (50,99)
/ branch = [likert.confidence08]
</likert>

<likert confidence08>
/ anchors = [1= "highly confident"; 2= "quite confident"; 3= "not very confident"; 4= "guessed"]
/ stimulusframes = [1 = confidence, text_decidedcolor_confidence08]
/ fontstyle = ("Calibri", 1.7%)
/ inputdevice = mouse 
/ numpoints = 4
/ position = (50,99)
/ ontrialend = [values.endblock = 1]
</likert>

<likert likert_probability09>
/ anchors = [1= "100% sure orange"; 2= "90% sure orange"; 3= "80% sure orange"; 4= "70% sure orange"; 5="60% sure orange"; 6="undecided"; 7= "60% sure pink"; 8="70% sure pink", 9="80% sure pink"; 10= "90% sure pink"; 11 = "100% sure pink"]
/ stimulusframes = [1 = responseoption_trialdecide_erase1, responseoption_trialdecide_erase2, probability, text_decidedcolor_probability09]
/ beginresponseframe = 2
/ fontstyle = ("Calibri", 1.7%)
/ numpoints = 11
/ inputdevice = mouse 
/ position = (50,99)
/ branch = [likert.confidence09]
</likert>

<likert confidence09>
/ anchors = [1= "highly confident"; 2= "quite confident"; 3= "not very confident"; 4= "guessed"]
/ stimulusframes = [1 = confidence, text_decidedcolor_confidence09]
/ fontstyle = ("Calibri", 1.7%)
/ inputdevice = mouse 
/ numpoints = 4
/ position = (50,99)
/ ontrialend = [values.endblock = 1]
</likert>

<likert likert_probability10>
/ anchors = [1= "100% sure orange"; 2= "90% sure orange"; 3= "80% sure orange"; 4= "70% sure orange"; 5="60% sure orange"; 6="undecided"; 7= "60% sure pink"; 8="70% sure pink", 9="80% sure pink"; 10= "90% sure pink"; 11 = "100% sure pink"]
/ stimulusframes = [1 = responseoption_trialdecide_erase1, responseoption_trialdecide_erase2, probability, text_decidedcolor_probability10]
/ beginresponseframe = 2
/ fontstyle = ("Calibri", 1.7%)
/ numpoints = 11
/ inputdevice = mouse 
/ position = (50,99)
/ branch = [likert.confidence10]
</likert>

<likert confidence10>
/ anchors = [1= "highly confident"; 2= "quite confident"; 3= "not very confident"; 4= "guessed"]
/ stimulusframes = [1 = confidence, text_decidedcolor_confidence10]
/ fontstyle = ("Calibri", 1.7%)
/ inputdevice = mouse 
/ numpoints = 4
/ position = (50,99)
/ ontrialend = [values.endblock = 1]
</likert>

<likert likert_probability11>
/ anchors = [1= "100% sure yellow"; 2= "90% sure yellow"; 3= "80% sure yellow"; 4= "70% sure yellow"; 5="60% sure yellow"; 6="undecided"; 7= "60% sure blue"; 8="70% sure blue", 9="80% sure blue"; 10= "90% sure blue"; 11 = "100% sure blue"]
/ stimulusframes = [1 = responseoption_trialdecide_erase1, responseoption_trialdecide_erase2, probability, text_decidedcolor_probability11]
/ beginresponseframe = 2
/ fontstyle = ("Calibri", 1.7%)
/ numpoints = 11
/ inputdevice = mouse 
/ position = (50,99)
/ branch = [likert.confidence11]
</likert>

<likert confidence11>
/ anchors = [1= "highly confident"; 2= "quite confident"; 3= "not very confident"; 4= "guessed"]
/ stimulusframes = [1 = confidence, text_decidedcolor_confidence11]
/ fontstyle = ("Calibri", 1.7%)
/ inputdevice = mouse 
/ numpoints = 4
/ position = (50,99)
/ ontrialend = [values.endblock = 1]
</likert>

<likert likert_probability12>
/ anchors = [1= "100% sure green"; 2= "90% sure green"; 3= "80% sure green"; 4= "70% sure green"; 5="60% sure green"; 6="undecided"; 7= "60% sure red"; 8="70% sure red", 9="80% sure red"; 10= "90% sure red"; 11 = "100% sure red"]
/ stimulusframes = [1 = responseoption_trialdecide_erase1, responseoption_trialdecide_erase2, probability, text_decidedcolor_probability12]
/ beginresponseframe = 2
/ fontstyle = ("Calibri", 1.7%)
/ numpoints = 11
/ inputdevice = mouse 
/ position = (50,99)
/ branch = [likert.confidence12]
</likert>

<likert confidence12>
/ anchors = [1= "highly confident"; 2= "quite confident"; 3= "not very confident"; 4= "guessed"]
/ stimulusframes = [1 = confidence, text_decidedcolor_confidence12]
/ fontstyle = ("Calibri", 1.7%)
/ inputdevice = mouse 
/ numpoints = 4
/ position = (50,99)
/ ontrialend = [values.endblock = 1]
</likert>

<likert likert_probability13>
/ anchors = [1= "100% sure orange"; 2= "90% sure orange"; 3= "80% sure orange"; 4= "70% sure orange"; 5="60% sure orange"; 6="undecided"; 7= "60% sure pink"; 8="70% sure pink", 9="80% sure pink"; 10= "90% sure pink"; 11 = "100% sure pink"]
/ stimulusframes = [1 = responseoption_trialdecide_erase1, responseoption_trialdecide_erase2, probability, text_decidedcolor_probability13]
/ beginresponseframe = 2
/ fontstyle = ("Calibri", 1.7%)
/ numpoints = 11
/ inputdevice = mouse 
/ position = (50,99)
/ branch = [likert.confidence13]
</likert>

<likert confidence13>
/ anchors = [1= "highly confident"; 2= "quite confident"; 3= "not very confident"; 4= "guessed"]
/ stimulusframes = [1 = confidence, text_decidedcolor_confidence13]
/ fontstyle = ("Calibri", 1.7%)
/ inputdevice = mouse 
/ numpoints = 4
/ position = (50,99)
/ ontrialend = [values.endblock = 1]
</likert>

<likert likert_probability14>
/ anchors = [1= "100% sure yellow"; 2= "90% sure yellow"; 3= "80% sure yellow"; 4= "70% sure yellow"; 5="60% sure yellow"; 6="undecided"; 7= "60% sure blue"; 8="70% sure blue", 9="80% sure blue"; 10= "90% sure blue"; 11 = "100% sure blue"]
/ stimulusframes = [1 = responseoption_trialdecide_erase1, responseoption_trialdecide_erase2, probability, text_decidedcolor_probability14]
/ beginresponseframe = 2
/ fontstyle = ("Calibri", 1.7%)
/ numpoints = 11
/ inputdevice = mouse 
/ position = (50,99)
/ branch = [likert.confidence14]
</likert>

<likert confidence14>
/ anchors = [1= "highly confident"; 2= "quite confident"; 3= "not very confident"; 4= "guessed"]
/ stimulusframes = [1 = confidence, text_decidedcolor_confidence14]
/ inputdevice = mouse 
/ numpoints = 4
/ position = (50,99)
/ ontrialend = [values.endblock = 1]
</likert>

<likert likert_probability15>
/ anchors = [1= "100% sure green"; 2= "90% sure green"; 3= "80% sure green"; 4= "70% sure green"; 5="60% sure green"; 6="undecided"; 7= "60% sure red"; 8="70% sure red", 9="80% sure red"; 10= "90% sure red"; 11 = "100% sure red"]
/ stimulusframes = [1 = responseoption_trialdecide_erase1, responseoption_trialdecide_erase2, probability, text_decidedcolor_probability15]
/ beginresponseframe = 2
/ fontstyle = ("Calibri", 1.7%)
/ numpoints = 11
/ inputdevice = mouse 
/ position = (50,99)
/ branch = [likert.confidence15]
</likert>

<likert confidence15>
/ anchors = [1= "highly confident"; 2= "quite confident"; 3= "not very confident"; 4= "guessed"]
/ stimulusframes = [1 = confidence, text_decidedcolor_confidence15]
/ fontstyle = ("Calibri", 1.7%)
/ inputdevice = mouse 
/ numpoints = 4
/ position = (50,99)
/ ontrialend = [values.endblock = 1]
</likert>

<likert likert_probability16>
/ anchors = [1= "100% sure orange"; 2= "90% sure orange"; 3= "80% sure orange"; 4= "70% sure orange"; 5="60% sure orange"; 6="undecided"; 7= "60% sure pink"; 8="70% sure pink", 9="80% sure pink"; 10= "90% sure pink"; 11 = "100% sure pink"]
/ stimulusframes = [1 = responseoption_trialdecide_erase1, responseoption_trialdecide_erase2, probability, text_decidedcolor_probability16]
/ beginresponseframe = 2
/ fontstyle = ("Calibri", 1.7%)
/ numpoints = 11
/ inputdevice = mouse 
/ position = (50,99)
/ branch = [likert.confidence16]
</likert>

<likert confidence16>
/ anchors = [1= "highly confident"; 2= "quite confident"; 3= "not very confident"; 4= "guessed"]
/ stimulusframes = [1 = confidence, text_decidedcolor_confidence16]
/ fontstyle = ("Calibri", 1.7%)
/ inputdevice = mouse 
/ numpoints = 4
/ position = (50,99)
/ ontrialend = [values.endblock = 1]
</likert>

<likert likert_probability17>
/ anchors = [1= "100% sure yellow"; 2= "90% sure yellow"; 3= "80% sure yellow"; 4= "70% sure yellow"; 5="60% sure yellow"; 6="undecided"; 7= "60% sure blue"; 8="70% sure blue", 9="80% sure blue"; 10= "90% sure blue"; 11 = "100% sure blue"]
/ stimulusframes = [1 = responseoption_trialdecide_erase1, responseoption_trialdecide_erase2, probability, text_decidedcolor_probability17]
/ beginresponseframe = 2
/ fontstyle = ("Calibri", 1.7%)
/ numpoints = 11
/ inputdevice = mouse 
/ position = (50,99)
/ branch = [likert.confidence17]
</likert>

<likert confidence17>
/ anchors = [1= "highly confident"; 2= "quite confident"; 3= "not very confident"; 4= "guessed"]
/ stimulusframes = [1 = confidence, text_decidedcolor_confidence17]
/ fontstyle = ("Calibri", 1.7%)
/ inputdevice = mouse 
/ numpoints = 4
/ position = (50,99)
/ ontrialend = [values.endblock = 1]
</likert>

<likert likert_probability18>
/ anchors = [1= "100% sure green"; 2= "90% sure green"; 3= "80% sure green"; 4= "70% sure green"; 5="60% sure green"; 6="undecided"; 7= "60% sure red"; 8="70% sure red", 9="80% sure red"; 10= "90% sure red"; 11 = "100% sure red"]
/ stimulusframes = [1 = responseoption_trialdecide_erase1, responseoption_trialdecide_erase2, probability, text_decidedcolor_probability18]
/ beginresponseframe = 2
/ fontstyle = ("Calibri", 1.7%)
/ numpoints = 11
/ inputdevice = mouse 
/ position = (50,99)
/ branch = [likert.confidence18]
</likert>

<likert confidence18>
/ anchors = [1= "highly confident"; 2= "quite confident"; 3= "not very confident"; 4= "guessed"]
/ stimulusframes = [1 = confidence, text_decidedcolor_confidence18]
/ fontstyle = ("Calibri", 1.7%)
/ inputdevice = mouse 
/ numpoints = 4
/ position = (50,99)
/ ontrialend = [values.endblock = 1]
</likert>

<likert likert_probability19>
/ anchors = [1= "100% sure orange"; 2= "90% sure orange"; 3= "80% sure orange"; 4= "70% sure orange"; 5="60% sure orange"; 6="undecided"; 7= "60% sure pink"; 8="70% sure pink", 9="80% sure pink"; 10= "90% sure pink"; 11 = "100% sure pink"]
/ stimulusframes = [1 = responseoption_trialdecide_erase1, responseoption_trialdecide_erase2, probability, text_decidedcolor_probability19]
/ beginresponseframe = 2
/ fontstyle = ("Calibri", 1.7%)
/ numpoints = 11
/ inputdevice = mouse 
/ position = (50,99)
/ branch = [likert.confidence19]
</likert>

<likert confidence19>
/ anchors = [1= "highly confident"; 2= "quite confident"; 3= "not very confident"; 4= "guessed"]
/ stimulusframes = [1 = confidence, text_decidedcolor_confidence19]
/ fontstyle = ("Calibri", 1.7%)
/ inputdevice = mouse 
/ numpoints = 4
/ position = (50,99)
/ ontrialend = [values.endblock = 1]
</likert>

<likert likert_probability20>
/ anchors = [1= "100% sure orange"; 2= "90% sure orange"; 3= "80% sure orange"; 4= "70% sure orange"; 5="60% sure orange"; 6="undecided"; 7= "60% sure pink"; 8="70% sure pink", 9="80% sure pink"; 10= "90% sure pink"; 11 = "100% sure pink"]
/ stimulusframes = [1 = responseoption_trialdecide_erase1, responseoption_trialdecide_erase2, probability, text_decidedcolor_probability20]
/ beginresponseframe = 2
/ fontstyle = ("Calibri", 1.7%)
/ numpoints = 11
/ inputdevice = mouse 
/ position = (50,99)
/ branch = [likert.confidence20]
</likert>

<likert confidence20>
/ anchors = [1= "highly confident"; 2= "quite confident"; 3= "not very confident"; 4= "guessed"]
/ stimulusframes = [1 = confidence, text_decidedcolor_confidence20]
/ fontstyle = ("Calibri", 1.7%)
/ inputdevice = mouse 
/ numpoints = 4
/ position = (50,99)
/ ontrialend = [values.endblock = 1]
</likert>

**************************************************************************************************************
**************************************************************************************************************
**************************************************************************************************************
*****************************     SHAPES    ******************************************************************
**************************************************************************************************************
**************************************************************************************************************
**************************************************************************************************************

***********************************************************
*Objects properties
***********************************************************
*Position nullpoint: Initial
<values>
/rowPosX = 0%
</values>

*Positon X values: Space between circles and rectangles (cells)
<values>
/space1X = 40
/space2X = 50
/space3X = 60
</values>

*Position Y values: Space between circles and rectangles (rows)
<values>
/row1PosY = 30%
/row2PosY = 50%
/row3PosY = 70%
</values>

*Size rectangles
<values>
/sizeBoxX = 7.8%
/sizeBoxY = 13.87%
</values>

*Size circles
<values>
/sizeDotX = 6.5%
/sizeDotY = 11.555%
</values>

*Size circles
<values>
/sizeRectangleX = 6.5%
/sizeRectangleY = 6.5%
</values>

*Color rectangles (RGB)
<values>
/redBox = 50
/greenBox = 37
/blueBox = 41
</values>

*White background
<shape white_BG>
/shape = rectangle
/color = white
/size = (100%, 100%)
</shape>

*** For three different trials, we need each two different circles colors, for when the participants decides for one color
<shape responseoption_trialdecide_color1>
/shape = rectangle
/color = black
/size = (values.sizeRectangleX, values.sizeRectangleY)
/position = (55%, 95%)
/erase = false
</shape>

<shape responseoption_trialdecide_erase1>
/shape = rectangle
/color = white
/size = (values.sizeRectangleX, values.sizeRectangleY)
/position = (55%, 95%)
/erase = false
</shape>

<shape responseoption_trialdecide_background_box1>
/shape = rectangle
/size = (values.sizeBoxX, values.sizeBoxY)
/color = (values.redBox, values.greenBox, values.blueBox)
/position = (30%, 50%)
/erase = false
</shape>

<shape responseoption_trialdecide_color2>
/shape = rectangle
/color = black
/size = (values.sizeRectangleX, values.sizeRectangleY)
/position = (75%, 95%)
/erase = false
</shape>

<shape responseoption_trialdecide_erase2>
/shape = rectangle
/color = white
/size = (values.sizeRectangleX, values.sizeRectangleY)
/position = (75%, 95%)
/erase = false
</shape>

<shape responseoption_trialdecide_background_box2>
/shape = rectangle
/size = (values.sizeBoxX, values.sizeBoxY)
/color = (values.redBox, values.greenBox, values.blueBox)
/position = (70%, 50%)
/erase = false
</shape>


***********************************************************
*Definition of 50 boxes
*************************First row*************************
<shape box1>
/shape = rectangle
/size = (values.sizeBoxX, values.sizeBoxY)
/color = (values.redBox, values.greenBox, values.blueBox)
/position = (values.rowPosX + values.space1X, values.row1PosY)
/erase = false
</shape>

<shape box2>
/shape = rectangle
/size = (values.sizeBoxX, values.sizeBoxY)
/color = (values.redBox, values.greenBox, values.blueBox)
/position = (values.rowPosX + values.space2X, values.row1PosY)
/erase = false
</shape>

<shape box3>
/shape = rectangle
/size = (values.sizeBoxX, values.sizeBoxY)
/color = (values.redBox, values.greenBox, values.blueBox)
/position = (values.rowPosX + values.space3X, values.row1PosY)
/erase = false
</shape>

<shape box4>
/shape = rectangle
/size = (values.sizeBoxX, values.sizeBoxY)
/color = (values.redBox, values.greenBox, values.blueBox)
/position = (values.rowPosX + values.space1X, values.row2PosY)
/erase = false
</shape>

<shape box5>
/shape = rectangle
/size = (values.sizeBoxX, values.sizeBoxY)
/color = (values.redBox, values.greenBox, values.blueBox)
/position = (values.rowPosX + values.space2X, values.row2PosY)
/erase = false
</shape>

<shape box6>
/shape = rectangle
/size = (values.sizeBoxX, values.sizeBoxY)
/color = (values.redBox, values.greenBox, values.blueBox)
/position = (values.rowPosX + values.space3X, values.row2PosY)
/erase = false
</shape>

<shape box7>
/shape = rectangle
/size = (values.sizeBoxX, values.sizeBoxY)
/color = (values.redBox, values.greenBox, values.blueBox)
/position = (values.rowPosX + values.space1X, values.row3PosY)
/erase = false
</shape>

<shape box8>
/shape = rectangle
/size = (values.sizeBoxX, values.sizeBoxY)
/color = (values.redBox, values.greenBox, values.blueBox)
/position = (values.rowPosX + values.space2X, values.row3PosY)
/erase = false
</shape>

<shape box9>
/shape = rectangle
/size = (values.sizeBoxX, values.sizeBoxY)
/color = (values.redBox, values.greenBox, values.blueBox)
/position = (values.rowPosX + values.space3X, values.row3PosY)
/erase = false
</shape>

******
Now 50 dots are defined to appear within the 50 boxes. At first, all dots are black, so that they are invisible before being clicked on. 
Later its color is being changed if the corresponding box is being clicked on

***********************************************************
*Definition of 50 dots
*************************First row*************************
<shape dot1>
/shape = circle
/color = black
/size = (values.sizeDotX, values.sizeDotY)
/position = (values.rowPosX + values.space1X, values.row1PosY)
/erase = false
</shape>

<shape dot2>
/shape = circle
/color = black
/size = (values.sizeDotX, values.sizeDotY)
/position = (values.rowPosX + values.space2X, values.row1PosY)
/erase = false
</shape>

<shape dot3>
/shape = circle
/color = black
/size = (values.sizeDotX, values.sizeDotY)
/position = (values.rowPosX + values.space3X, values.row1PosY)
/ erase = false
</shape>

<shape dot4>
/shape = circle
/color = black
/size = (values.sizeDotX, values.sizeDotY)
/position = (values.rowPosX + values.space1X, values.row2PosY)
/ erase = false
</shape>

<shape dot5>
/shape = circle
/color = black
/size = (values.sizeDotX, values.sizeDotY)
/position = (values.rowPosX + values.space2X, values.row2PosY)
/ erase = false
</shape>

<shape dot6>
/shape = circle
/color = black
/size = (values.sizeDotX, values.sizeDotY)
/position = (values.rowPosX + values.space3X, values.row2PosY)
/ erase = false
</shape>

<shape dot7>
/shape = circle
/color = black
/size = (values.sizeDotX, values.sizeDotY)
/position = (values.rowPosX + values.space1X, values.row3PosY)
/ erase = false
</shape>

<shape dot8>
/shape = circle
/color = black
/size = (values.sizeDotX, values.sizeDotY)
/position = (values.rowPosX + values.space2X, values.row3PosY)
/ erase = false
</shape>

<shape dot9>
/shape = circle
/color = black
/size = (values.sizeDotX, values.sizeDotY)
/position = (values.rowPosX + values.space3X, values.row3PosY)
/ erase = false
</shape>


**************************************************************************************************************
**************************************************************************************************************
**************************************************************************************************************
*****************************     Trial elements repeated over different blocks   ****************************
**************************************************************************************************************
**************************************************************************************************************
**************************************************************************************************************

*** trial_choose is the trial, in which a participant can click on any of the 12 boxes. If a participant clicks on one of the boxes, the color is changed. Additionally the value boxX_click is being changed.
*this then ensures that the color does not change again. In this case this trial branches to this trial again (trial is repeated until a new box is clicked), otherwise it branches to the trial trial_response
*Additionally it captures the number of draws by adding +1 to the value draws_trial_XX.
<trial trial_choose>
/stimulusframes = [1= instruction, box1, box2, box3, box4, box5, box6, box7, box8, box9,
dot1, dot2, dot3, dot4, dot5, dot6, dot7, dot8, dot9, want_decision, responseoption_trialdecide_color1, responseoption_trialdecide_color2, OR]
/inputdevice = mouse
/validresponse = (box1, box2, box3, box4, box5, box6, box7, box8, box9,  responseoption_trialdecide_color1, responseoption_trialdecide_color2)
/ontrialbegin = [shape.responseoption_trialdecide_color1.color = list.list_uniquecolor_left.item(values.current_list);
				shape.responseoption_trialdecide_color2.color = list.list_uniquecolor_right.item(values.current_list)]
/ontrialend = [values.incorrect=0;
if (values.current_list == 1){values.draws_trial_01=values.current_click+1}
else if (values.current_list == 2){values.draws_trial_02=values.current_click+1}
else if (values.current_list == 3){values.draws_trial_03=values.current_click+1}
else if (values.current_list == 4){values.draws_trial_04=values.current_click+1}
else if (values.current_list == 5){values.draws_trial_05=values.current_click+1}
else if (values.current_list == 6){values.draws_trial_06=values.current_click+1}
else if (values.current_list == 7){values.draws_trial_07=values.current_click+1}
else if (values.current_list == 8){values.draws_trial_08=values.current_click+1}
else if (values.current_list == 9){values.draws_trial_09=values.current_click+1}
else if (values.current_list == 10){values.draws_trial_10=values.current_click+1}
else if (values.current_list == 11){values.draws_trial_11=values.current_click+1}
else if (values.current_list == 12){values.draws_trial_12=values.current_click+1}
else if (values.current_list == 13){values.draws_trial_13=values.current_click+1}
else if (values.current_list == 14){values.draws_trial_14=values.current_click+1}
else if (values.current_list == 15){values.draws_trial_15=values.current_click+1}
else if (values.current_list == 16){values.draws_trial_16=values.current_click+1}
else if (values.current_list == 17){values.draws_trial_17=values.current_click+1}
else if (values.current_list == 18){values.draws_trial_18=values.current_click+1}
else if (values.current_list == 19){values.draws_trial_19=values.current_click+1}
else if (values.current_list == 20){values.draws_trial_20=values.current_click+1}; 
values.current_click += 1;
if (values.box1_click==0 && trial.trial_choose.response == "box1") {shape.dot1.color = list.masterlist.nextvalue; values.box1_click=1}
else if (values.box2_click==0 && trial.trial_choose.response == "box2") {shape.dot2.color = list.masterlist.nextvalue; values.box2_click=1}
else if (values.box3_click==0 && trial.trial_choose.response == "box3") {shape.dot3.color = list.masterlist.nextvalue; values.box3_click=1}
else if (values.box4_click==0 && trial.trial_choose.response == "box4") {shape.dot4.color = list.masterlist.nextvalue; values.box4_click=1}
else if (values.box5_click==0 && trial.trial_choose.response == "box5") {shape.dot5.color = list.masterlist.nextvalue; values.box5_click=1}
else if (values.box6_click==0 && trial.trial_choose.response == "box6") {shape.dot6.color = list.masterlist.nextvalue; values.box6_click=1}
else if (values.box7_click==0 && trial.trial_choose.response == "box7") {shape.dot7.color = list.masterlist.nextvalue; values.box7_click=1}
else if (values.box8_click==0 && trial.trial_choose.response == "box8") {shape.dot8.color = list.masterlist.nextvalue; values.box8_click=1}
else if (values.box9_click==0 && trial.trial_choose.response == "box9") {shape.dot9.color = list.masterlist.nextvalue; values.box9_click=1}
else if (values.current_click=values.current_click-1)(values.incorrect=1);
if (values.current_list == 1 && trial.trial_choose.response == "responseoption_trialdecide_color1") values.colordecision_trial01=list.colors_text_trial01.items.1;
else if (values.current_list == 1 && trial.trial_choose.response == "responseoption_trialdecide_color2") values.colordecision_trial01=list.colors_text_trial01.items.2;
else if (values.current_list == 2 && trial.trial_choose.response == "responseoption_trialdecide_color1") values.colordecision_trial02=list.colors_text_trial02.items.1;
else if (values.current_list == 2 && trial.trial_choose.response == "responseoption_trialdecide_color2") values.colordecision_trial02=list.colors_text_trial02.items.2;
else if (values.current_list == 3 && trial.trial_choose.response == "responseoption_trialdecide_color1") values.colordecision_trial03=list.colors_text_trial03.items.1;
else if (values.current_list == 3 && trial.trial_choose.response == "responseoption_trialdecide_color2") values.colordecision_trial03=list.colors_text_trial03.items.2;
else if (values.current_list == 4 && trial.trial_choose.response == "responseoption_trialdecide_color1") values.colordecision_trial04=list.colors_text_trial04.items.1;
else if (values.current_list == 4 && trial.trial_choose.response == "responseoption_trialdecide_color2") values.colordecision_trial04=list.colors_text_trial04.items.2;
else if (values.current_list == 5 && trial.trial_choose.response == "responseoption_trialdecide_color1") values.colordecision_trial05=list.colors_text_trial05.items.1;
else if (values.current_list == 5 && trial.trial_choose.response == "responseoption_trialdecide_color2") values.colordecision_trial05=list.colors_text_trial05.items.2;
else if (values.current_list == 6 && trial.trial_choose.response == "responseoption_trialdecide_color1") values.colordecision_trial06=list.colors_text_trial06.items.1;
else if (values.current_list == 6 && trial.trial_choose.response == "responseoption_trialdecide_color2") values.colordecision_trial06=list.colors_text_trial06.items.2;
else if (values.current_list == 7 && trial.trial_choose.response == "responseoption_trialdecide_color1") values.colordecision_trial07=list.colors_text_trial07.items.1;
else if (values.current_list == 7 && trial.trial_choose.response == "responseoption_trialdecide_color2") values.colordecision_trial07=list.colors_text_trial07.items.2;
else if (values.current_list == 8 && trial.trial_choose.response == "responseoption_trialdecide_color1") values.colordecision_trial08=list.colors_text_trial08.items.1;
else if (values.current_list == 8 && trial.trial_choose.response == "responseoption_trialdecide_color2") values.colordecision_trial08=list.colors_text_trial08.items.2;
else if (values.current_list == 9 && trial.trial_choose.response == "responseoption_trialdecide_color1") values.colordecision_trial09=list.colors_text_trial09.items.1;
else if (values.current_list == 9 && trial.trial_choose.response == "responseoption_trialdecide_color2") values.colordecision_trial09=list.colors_text_trial09.items.2;
else if (values.current_list == 10 && trial.trial_choose.response == "responseoption_trialdecide_color1") values.colordecision_trial10=list.colors_text_trial10.items.1;
else if (values.current_list == 10 && trial.trial_choose.response == "responseoption_trialdecide_color2") values.colordecision_trial10=list.colors_text_trial10.items.2;
else if (values.current_list == 11 && trial.trial_choose.response == "responseoption_trialdecide_color1") values.colordecision_trial11=list.colors_text_trial11.items.2;
else if (values.current_list == 11 && trial.trial_choose.response == "responseoption_trialdecide_color2") values.colordecision_trial11=list.colors_text_trial11.items.1;
else if (values.current_list == 12 && trial.trial_choose.response == "responseoption_trialdecide_color1") values.colordecision_trial12=list.colors_text_trial12.items.1;
else if (values.current_list == 12 && trial.trial_choose.response == "responseoption_trialdecide_color2") values.colordecision_trial12=list.colors_text_trial12.items.2;
else if (values.current_list == 13 && trial.trial_choose.response == "responseoption_trialdecide_color1") values.colordecision_trial13=list.colors_text_trial13.items.1;
else if (values.current_list == 13 && trial.trial_choose.response == "responseoption_trialdecide_color2") values.colordecision_trial13=list.colors_text_trial13.items.2;
else if (values.current_list == 14 && trial.trial_choose.response == "responseoption_trialdecide_color1") values.colordecision_trial14=list.colors_text_trial14.items.1;
else if (values.current_list == 14 && trial.trial_choose.response == "responseoption_trialdecide_color2") values.colordecision_trial14=list.colors_text_trial14.items.2;
else if (values.current_list == 15 && trial.trial_choose.response == "responseoption_trialdecide_color1") values.colordecision_trial15=list.colors_text_trial15.items.1;
else if (values.current_list == 15 && trial.trial_choose.response == "responseoption_trialdecide_color2") values.colordecision_trial15=list.colors_text_trial15.items.2;
else if (values.current_list == 16 && trial.trial_choose.response == "responseoption_trialdecide_color1") values.colordecision_trial16=list.colors_text_trial16.items.1;
else if (values.current_list == 16 && trial.trial_choose.response == "responseoption_trialdecide_color2") values.colordecision_trial16=list.colors_text_trial16.items.2;
else if (values.current_list == 17 && trial.trial_choose.response == "responseoption_trialdecide_color1") values.colordecision_trial17=list.colors_text_trial17.items.1;
else if (values.current_list == 17 && trial.trial_choose.response == "responseoption_trialdecide_color2") values.colordecision_trial17=list.colors_text_trial17.items.2;
else if (values.current_list == 18 && trial.trial_choose.response == "responseoption_trialdecide_color1") values.colordecision_trial18=list.colors_text_trial18.items.1;
else if (values.current_list == 18 && trial.trial_choose.response == "responseoption_trialdecide_color2") values.colordecision_trial18=list.colors_text_trial18.items.2;
else if (values.current_list == 19 && trial.trial_choose.response == "responseoption_trialdecide_color1") values.colordecision_trial19=list.colors_text_trial19.items.1;
else if (values.current_list == 19 && trial.trial_choose.response == "responseoption_trialdecide_color2") values.colordecision_trial19=list.colors_text_trial19.items.2;
else if (values.current_list == 20 && trial.trial_choose.response == "responseoption_trialdecide_color1") values.colordecision_trial20=list.colors_text_trial20.items.1;
else if (values.current_list == 20 && trial.trial_choose.response == "responseoption_trialdecide_color2") values.colordecision_trial20=list.colors_text_trial20.items.2;
if ((trial.trial_choose.response == "responseoption_trialdecide_color1" || trial.trial_choose.response == "responseoption_trialdecide_color2") && values.current_list == 1) values.endblock = 1;
else if ((trial.trial_choose.response == "responseoption_trialdecide_color1" || trial.trial_choose.response == "responseoption_trialdecide_color2") && values.current_list == 2) values.endblock = 1;
else if ((trial.trial_choose.response == "responseoption_trialdecide_color1" || trial.trial_choose.response == "responseoption_trialdecide_color2") && values.current_list == 3) values.endblock = 1;
else if ((trial.trial_choose.response == "responseoption_trialdecide_color1" || trial.trial_choose.response == "responseoption_trialdecide_color2") && values.current_list == 4) values.endblock = 1;
else if ((trial.trial_choose.response == "responseoption_trialdecide_color1" || trial.trial_choose.response == "responseoption_trialdecide_color2") && values.current_list == 5) values.endblock = 1;
else if ((trial.trial_choose.response == "responseoption_trialdecide_color1" || trial.trial_choose.response == "responseoption_trialdecide_color2") && values.current_list == 6) values.endblock = 1;
else if ((trial.trial_choose.response == "responseoption_trialdecide_color1" || trial.trial_choose.response == "responseoption_trialdecide_color2") && values.current_list == 7) values.endblock = 1;
else if ((trial.trial_choose.response == "responseoption_trialdecide_color1" || trial.trial_choose.response == "responseoption_trialdecide_color2") && values.current_list == 8) values.endblock = 1;
else if ((trial.trial_choose.response == "responseoption_trialdecide_color1" || trial.trial_choose.response == "responseoption_trialdecide_color2") && values.current_list == 9) values.endblock = 1;
else if ((trial.trial_choose.response == "responseoption_trialdecide_color1" || trial.trial_choose.response == "responseoption_trialdecide_color2") && values.current_list == 10) values.endblock = 1;
else if ((trial.trial_choose.response == "responseoption_trialdecide_color1" || trial.trial_choose.response == "responseoption_trialdecide_color2") && values.current_list == 11) values.endblock = 1;
else if ((trial.trial_choose.response == "responseoption_trialdecide_color1" || trial.trial_choose.response == "responseoption_trialdecide_color2") && values.current_list == 12) values.endblock = 1;
else if ((trial.trial_choose.response == "responseoption_trialdecide_color1" || trial.trial_choose.response == "responseoption_trialdecide_color2") && values.current_list == 13) values.endblock = 1;
else if ((trial.trial_choose.response == "responseoption_trialdecide_color1" || trial.trial_choose.response == "responseoption_trialdecide_color2") && values.current_list == 14) values.endblock = 1;
else if ((trial.trial_choose.response == "responseoption_trialdecide_color1" || trial.trial_choose.response == "responseoption_trialdecide_color2") && values.current_list == 15) values.endblock = 1;
else if ((trial.trial_choose.response == "responseoption_trialdecide_color1" || trial.trial_choose.response == "responseoption_trialdecide_color2") && values.current_list == 16) values.endblock = 1;
else if ((trial.trial_choose.response == "responseoption_trialdecide_color1" || trial.trial_choose.response == "responseoption_trialdecide_color2") && values.current_list == 17) values.endblock = 1;
else if ((trial.trial_choose.response == "responseoption_trialdecide_color1" || trial.trial_choose.response == "responseoption_trialdecide_color2") && values.current_list == 18) values.endblock = 1;
else if ((trial.trial_choose.response == "responseoption_trialdecide_color1" || trial.trial_choose.response == "responseoption_trialdecide_color2") && values.current_list == 19) values.endblock = 1;
else if ((trial.trial_choose.response == "responseoption_trialdecide_color1" || trial.trial_choose.response == "responseoption_trialdecide_color2") && values.current_list == 20) values.endblock = 1]
/branch= [if (values.current_click>list.list_length.nextvalue) trial.trial1_too_late
else if (values.incorrect==1) trial.trial_choose]
/ skip=[values.endblock == 1]
/ skip=[values.current_click>list.list_length.nextvalue+1]
</trial>

*This trial is only shown, if participants decided too late. This is captured in the value toolate_trial_02. Additionally, the value for the draw count is increased by one.
<trial trial1_too_late>
/stimulusframes = [1= white_BG, too_late, next_button]
/inputdevice = mouse
/validresponse = (next_button)
/ontrialend = [values.endblock = 1;
if (values.current_list == 1) {values.draws_trial_01+=1; values.toolate_trial_01=1}
else if (values.current_list == 2) {values.draws_trial_02+=1; values.toolate_trial_02=1}
else if (values.current_list == 3) {values.draws_trial_03+=1; values.toolate_trial_03=1}
else if (values.current_list == 4) {values.draws_trial_04+=1; values.toolate_trial_04=1}
else if (values.current_list == 5) {values.draws_trial_05+=1; values.toolate_trial_05=1}
else if (values.current_list == 6) {values.draws_trial_06+=1; values.toolate_trial_06=1}
else if (values.current_list == 7) {values.draws_trial_07+=1; values.toolate_trial_07=1}
else if (values.current_list == 8) {values.draws_trial_08+=1; values.toolate_trial_08=1}
else if (values.current_list == 9) {values.draws_trial_09+=1; values.toolate_trial_09=1}
else if (values.current_list == 10) {values.draws_trial_10+=1; values.toolate_trial_10=1}
else if (values.current_list == 11) {values.draws_trial_11+=1; values.toolate_trial_11=1}
else if (values.current_list == 12) {values.draws_trial_12+=1; values.toolate_trial_12=1}
else if (values.current_list == 13) {values.draws_trial_13+=1; values.toolate_trial_13=1}
else if (values.current_list == 14) {values.draws_trial_14+=1; values.toolate_trial_14=1}
else if (values.current_list == 15) {values.draws_trial_15+=1; values.toolate_trial_15=1}
else if (values.current_list == 16) {values.draws_trial_16+=1; values.toolate_trial_16=1}
else if (values.current_list == 17) {values.draws_trial_17+=1; values.toolate_trial_17=1}
else if (values.current_list == 18) {values.draws_trial_18+=1; values.toolate_trial_18=1}
else if (values.current_list == 19) {values.draws_trial_19+=1; values.toolate_trial_19=1}
else if (values.current_list == 20) {values.draws_trial_20+=1; values.toolate_trial_20=1}]
</trial>

<trial trial_start>
/stimulusframes = [1= white_BG, start, next_button, reminder_pressure]
/inputdevice = mouse
/validresponse = (next_button)
</trial>


*These lists are necessary to manually call the items from color_sequence_trial01, color_sequence_trial02, and color_sequence_trial03
<list masterlist>
/ items = (list.color_sequence_trial01.nextvalue, 
list.color_sequence_trial02.nextvalue,
list.color_sequence_trial03.nextvalue,
list.color_sequence_trial04.nextvalue,
list.color_sequence_trial05.nextvalue,
list.color_sequence_trial06.nextvalue,
list.color_sequence_trial07.nextvalue,
list.color_sequence_trial08.nextvalue,
list.color_sequence_trial09.nextvalue, 
list.color_sequence_trial10.nextvalue,
list.color_sequence_trial11.nextvalue, 
list.color_sequence_trial12.nextvalue,
list.color_sequence_trial13.nextvalue,
list.color_sequence_trial14.nextvalue,
list.color_sequence_trial15.nextvalue,
list.color_sequence_trial16.nextvalue,
list.color_sequence_trial17.nextvalue,
list.color_sequence_trial18.nextvalue,
list.color_sequence_trial19.nextvalue,
list.color_sequence_trial20.nextvalue)
/ selectionmode = (values.current_list)
</list>

<list list_length>
/ items = (list.color_sequence_trial01.itemcount, 
list.color_sequence_trial02.itemcount, 
list.color_sequence_trial03.itemcount,
list.color_sequence_trial04.itemcount,
list.color_sequence_trial05.itemcount,
list.color_sequence_trial06.itemcount,
list.color_sequence_trial07.itemcount,
list.color_sequence_trial08.itemcount,
list.color_sequence_trial09.itemcount,
list.color_sequence_trial10.itemcount,
list.color_sequence_trial11.itemcount,
list.color_sequence_trial12.itemcount,
list.color_sequence_trial13.itemcount,
list.color_sequence_trial14.itemcount,
list.color_sequence_trial15.itemcount,
list.color_sequence_trial16.itemcount,
list.color_sequence_trial17.itemcount,
list.color_sequence_trial18.itemcount,
list.color_sequence_trial19.itemcount,
list.color_sequence_trial20.itemcount)
/ selectionmode = (values.current_list)
</list>

<list list_colornames_left>
/ items = (list.colors_text_trial01.items.1, 
list.colors_text_trial02.items.1,
list.colors_text_trial03.items.1,
list.colors_text_trial04.items.1,
list.colors_text_trial05.items.1,
list.colors_text_trial06.items.1,
list.colors_text_trial07.items.1,
list.colors_text_trial08.items.1,
list.colors_text_trial09.items.1,
list.colors_text_trial10.items.1,
list.colors_text_trial11.items.1,
list.colors_text_trial12.items.1,
list.colors_text_trial13.items.1,
list.colors_text_trial14.items.1,
list.colors_text_trial15.items.1,
list.colors_text_trial16.items.1,
list.colors_text_trial17.items.1,
list.colors_text_trial18.items.1,
list.colors_text_trial19.items.1, 
list.colors_text_trial20.items.1)
/ selectionmode = (values.current_list)
</list>

<list list_colornames_right>
/ items = (list.colors_text_trial01.items.2, 
list.colors_text_trial02.items.2,
list.colors_text_trial03.items.2, 
list.colors_text_trial04.items.2, 
list.colors_text_trial05.items.2,
list.colors_text_trial06.items.2, 
list.colors_text_trial07.items.2, 
list.colors_text_trial08.items.2, 
list.colors_text_trial09.items.2, 
list.colors_text_trial10.items.2, 
list.colors_text_trial11.items.2, 
list.colors_text_trial12.items.2, 
list.colors_text_trial13.items.2, 
list.colors_text_trial14.items.2, 
list.colors_text_trial15.items.2, 
list.colors_text_trial16.items.2, 
list.colors_text_trial17.items.2, 
list.colors_text_trial18.items.2, 
list.colors_text_trial19.items.2,   
list.colors_text_trial20.items.2)
/ selectionmode = (values.current_list)
</list>

<list list_uniquecolor_left>
/ items = (list.colors_unique_trial01.items.1, 
list.colors_unique_trial02.items.1, 
list.colors_unique_trial03.items.1, 
list.colors_unique_trial04.items.1, 
list.colors_unique_trial05.items.1, 
list.colors_unique_trial06.items.1, 
list.colors_unique_trial07.items.1, 
list.colors_unique_trial08.items.1, 
list.colors_unique_trial09.items.1, 
list.colors_unique_trial10.items.1, 
list.colors_unique_trial11.items.1, 
list.colors_unique_trial12.items.1, 
list.colors_unique_trial13.items.1, 
list.colors_unique_trial14.items.1, 
list.colors_unique_trial15.items.1, 
list.colors_unique_trial16.items.1, 
list.colors_unique_trial17.items.1, 
list.colors_unique_trial18.items.1, 
list.colors_unique_trial19.items.1, 
list.colors_unique_trial20.items.1)
/ selectionmode = (values.current_list)
</list>

<list list_uniquecolor_right>
/ items = (list.colors_unique_trial01.items.2, 
list.colors_unique_trial02.items.2, 
list.colors_unique_trial03.items.2, 
list.colors_unique_trial04.items.2, 
list.colors_unique_trial05.items.2, 
list.colors_unique_trial06.items.2, 
list.colors_unique_trial07.items.2, 
list.colors_unique_trial08.items.2, 
list.colors_unique_trial09.items.2, 
list.colors_unique_trial10.items.2, 
list.colors_unique_trial11.items.2, 
list.colors_unique_trial12.items.2, 
list.colors_unique_trial13.items.2, 
list.colors_unique_trial14.items.2, 
list.colors_unique_trial15.items.2, 
list.colors_unique_trial16.items.2, 
list.colors_unique_trial17.items.2, 
list.colors_unique_trial18.items.2, 
list.colors_unique_trial19.items.2, 
list.colors_unique_trial20.items.2)
/ selectionmode = (values.current_list)
</list>

*One block is one "trial", meaning one sequence in the box task. This block is reapeated for each sequence.
<block boxtask_pressure50>
/trials = [1= trial_start; 2-11=trial_choose]
/stop = [values.current_click > list.list_length.nextvalue +1 || values.endblock==1]
/onblockbegin = [values.current_list = list.trial_sequence.nextvalue;
values.sequence = concat(concat(values.sequence,values.current_list), ", ");]
</block>

*This list determines, whether the different order of sequences are presented in sequence (first color_sequence_trial01, then color_sequence_trial02 etc.) or in random order (i.e., position of color_sequence_trial01 is randomly determined).
*to have sequences presented in sequence, set /selectionmode = sequence. To have sequences presented in random order, set /selectionmode = random
<list trial_sequence>
/items = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20)
/selectionmode = sequence
</list>



*This runs the experiment. Here is defined, how many trials/sequences the participant should do. This is defined by the number of blocks (default: 1-20; this means 20 trials/sequences) 
<expt experiment>
/blocks = [1-3=boxtask_pressure50]
/preinstructions = (instructions_pressure12_long, Reminder_Pressure)
/onblockbegin = [values.incorrect=0;  
values.current_click = 0;
values.endblock = 0;
values.box1_click = 0;
values.box2_click = 0;
values.box3_click = 0;
values.box4_click = 0;
values.box5_click = 0;
values.box6_click = 0;
values.box7_click = 0;
values.box8_click = 0;
values.box9_click = 0;
shape.dot1.color = black;
shape.dot2.color = black;
shape.dot3.color = black;
shape.dot4.color = black;
shape.dot5.color = black;
shape.dot6.color = black;
shape.dot7.color = black;
shape.dot8.color = black;
shape.dot9.color = black;
]
</expt>

** Definition of values
<values>
/draws_trial_01=-88
/draws_trial_02=-88
/draws_trial_03=-88
/draws_trial_04=-88
/draws_trial_05=-88
/draws_trial_06=-88
/draws_trial_07=-88
/draws_trial_08=-88
/draws_trial_09=-88
/draws_trial_10=-88
/draws_trial_11=-88
/draws_trial_12=-88
/draws_trial_13=-88
/draws_trial_14=-88
/draws_trial_15=-88
/draws_trial_16=-88
/draws_trial_17=-88
/draws_trial_18=-88
/draws_trial_19=-88
/draws_trial_20=-88
/toolate_trial_01=0
/toolate_trial_02=0
/toolate_trial_03=0
/toolate_trial_04=0
/toolate_trial_05=0
/toolate_trial_06=0
/toolate_trial_07=0
/toolate_trial_08=0
/toolate_trial_09=0
/toolate_trial_10=0
/toolate_trial_11=0
/toolate_trial_12=0
/toolate_trial_13=0
/toolate_trial_14=0
/toolate_trial_15=0
/toolate_trial_16=0
/toolate_trial_17=0
/toolate_trial_18=0
/toolate_trial_19=0
/toolate_trial_20=0
/incorrect=0 
/current_click = 0
/endblock = 0
/box1_click = 0
/box2_click = 0
/box3_click = 0
/box4_click = 0
/box5_click = 0
/box6_click = 0
/box7_click = 0
/box8_click = 0
/box9_click = 0
/dummy = 0
/current_list =0
/ sequence = ""
/colordecision_trial01=-88
/colordecision_trial02=-88
/colordecision_trial03=-88
/colordecision_trial04=-88
/colordecision_trial05=-88
/colordecision_trial06=-88
/colordecision_trial07=-88
/colordecision_trial08=-88
/colordecision_trial09=-88
/colordecision_trial10=-88
/colordecision_trial11=-88
/colordecision_trial12=-88
/colordecision_trial13=-88
/colordecision_trial14=-88
/colordecision_trial15=-88
/colordecision_trial16=-88
/colordecision_trial17=-88
/colordecision_trial18=-88
/colordecision_trial19=-88
/colordecision_trial20=-88
</values>

*summary data
 <summarydata>
/ encrypt = false
/ separatefiles = false
/ columns = [script.subjectid, script.groupid, script.elapsedtime, script.startdate, script.starttime, 
values.draws_trial_01, 
values.draws_trial_02, 
values.draws_trial_03, 
values.draws_trial_04, 
values.draws_trial_05, 
values.draws_trial_06,
values.draws_trial_07, 
values.draws_trial_08, 
values.draws_trial_09,
values.draws_trial_10,
values.draws_trial_11, 
values.draws_trial_12, 
values.draws_trial_13, 
values.draws_trial_14, 
values.draws_trial_15, 
values.draws_trial_16,
values.draws_trial_17, 
values.draws_trial_18, 
values.draws_trial_19,
values.draws_trial_20,
values.toolate_trial_01, 
values.toolate_trial_02, 
values.toolate_trial_03, 
values.toolate_trial_04, 
values.toolate_trial_05, 
values.toolate_trial_06, 
values.toolate_trial_07, 
values.toolate_trial_08, 
values.toolate_trial_09, 
values.toolate_trial_10, 
values.toolate_trial_11, 
values.toolate_trial_12, 
values.toolate_trial_13, 
values.toolate_trial_14, 
values.toolate_trial_15, 
values.toolate_trial_16, 
values.toolate_trial_17, 
values.toolate_trial_18, 
values.toolate_trial_19, 
values.toolate_trial_20, 
likert.likert_probability01.response, 
likert.likert_probability02.response, 
likert.likert_probability03.response, 
likert.likert_probability04.response, 
likert.likert_probability05.response, 
likert.likert_probability06.response, 
likert.likert_probability07.response, 
likert.likert_probability08.response, 
likert.likert_probability09.response, 
likert.likert_probability10.response, 
likert.likert_probability11.response, 
likert.likert_probability12.response, 
likert.likert_probability13.response, 
likert.likert_probability14.response, 
likert.likert_probability15.response, 
likert.likert_probability16.response, 
likert.likert_probability17.response, 
likert.likert_probability18.response, 
likert.likert_probability19.response, 
likert.likert_probability20.response, 
likert.confidence01.response, 
likert.confidence02.response, 
likert.confidence03.response, 
likert.confidence04.response, 
likert.confidence05.response, 
likert.confidence06.response, 
likert.confidence07.response, 
likert.confidence08.response, 
likert.confidence09.response, 
likert.confidence10.response, 
likert.confidence11.response, 
likert.confidence12.response, 
likert.confidence13.response, 
likert.confidence14.response, 
likert.confidence15.response, 
likert.confidence16.response, 
likert.confidence17.response, 
likert.confidence18.response, 
likert.confidence19.response, 
likert.confidence20.response, 
values.colordecision_trial01, 
values.colordecision_trial02, 
values.colordecision_trial03,
values.colordecision_trial04, 
values.colordecision_trial05, 
values.colordecision_trial06,
values.colordecision_trial07, 
values.colordecision_trial08, 
values.colordecision_trial09,
values.colordecision_trial10, 
values.colordecision_trial11, 
values.colordecision_trial12,
values.colordecision_trial13, 
values.colordecision_trial14, 
values.colordecision_trial15,
values.colordecision_trial16, 
values.colordecision_trial17, 
values.colordecision_trial18,
values.colordecision_trial19, 
values.colordecision_trial20,
values.sequence]
</summarydata> 

<defaults>
/ canvasaspectratio = (16,9)
/ canvassize = (95%,100%)
</defaults>
